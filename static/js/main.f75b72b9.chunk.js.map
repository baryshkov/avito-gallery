{"version":3,"sources":["apiService/apiService.js","Components/Spinner/index.jsx","Components/Spinner/Spinner.jsx","Components/PicAndComments/PicAndComments.jsx","Components/PicAndComments/index.jsx","Components/Modal/index.jsx","Components/Modal/Modal.jsx","Components/Gallery/index.jsx","Components/Gallery/Gallery.jsx","Components/Footer/index.jsx","Components/Footer/Footer.jsx","Components/App/index.jsx","Components/App/App.jsx","index.js"],"names":["ApiService","API_BASE","getAllPreviews","a","async","fetch","response","ok","Error","status","json","getImageAndComments","imageId","postComment","comment","name","commentUrl","commentInfo","method","headers","body","JSON","stringify","Spinner","className","closeButtonSvg","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","stroke","PicAndComments","onClose","forwardedRef","testApi","useState","imageUrl","setImageUrl","comments","setComments","loading","setLoading","username","setUsername","userComment","setUserComment","useEffect","data","url","fetchData","validate","e","target","value","fakeComment","length","ref","type","onClick","src","alt","map","date","id","text","formattedDate","Date","toLocaleDateString","key","dateTime","split","reverse","join","onSubmit","preventDefault","console","table","placeholder","onChange","required","Modal","modal","useRef","handleKeyUp","useCallback","keys","27","window","removeEventListener","keyCode","handleOutsideClick","undefined","current","contains","document","addEventListener","Gallery","previews","setPreviews","modalOpened","setModalOpened","modalId","setModalId","onModalOpen","Footer","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f75b72b9.chunk.js","sourcesContent":["export default class ApiService {\n  API_BASE = 'https://boiling-refuge-66454.herokuapp.com/images/';\n\n  getAllPreviews = async () => {\n    const response = await fetch(`${this.API_BASE}`);\n    if (!response.ok) {\n      throw new Error(\n        `Could not fetch ${this.API_BASE}, received an error with response status \n        ${response.status}`,\n      );\n    }\n    return response.json();\n  };\n\n  getImageAndComments = async imageId => {\n    const response = await fetch(`${this.API_BASE}${imageId}`);\n    if (!response.ok) {\n      throw new Error(`empty for now`);\n    }\n    return response.json();\n  };\n\n  postComment = async (comment, name, imageId) => {\n    const commentUrl = `${this.API_BASE}${imageId}/comments`;\n\n    const commentInfo = {\n      name,\n      comment,\n    };\n\n    const response = await fetch(commentUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(commentInfo),\n    });\n    return response;\n  };\n}\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"loadingio-spinner-spinner-sv8p6szpyb\">\n        <div className=\"ldio-hscnriwj1a5\">\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ApiService from '../../apiService/apiService';\nimport './PicAndComments.css';\nimport Spinner from '../Spinner';\n\nconst closeButtonSvg = (\n  <svg\n    className=\"modal__close-button\"\n    width=\"20\"\n    height=\"19\"\n    viewBox=\"0 0 20 19\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <line x1=\"1.35355\" y1=\"0.646447\" x2=\"19.3536\" y2=\"18.6464\" stroke=\"black\" />\n    <line x1=\"0.646447\" y1=\"18.6464\" x2=\"18.6464\" y2=\"0.646446\" stroke=\"black\" />\n  </svg>\n);\n\nconst PicAndComments = ({ imageId, onClose, forwardedRef }) => {\n  const testApi = new ApiService();\n\n  const [imageUrl, setImageUrl] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [username, setUsername] = useState(null);\n  const [userComment, setUserComment] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      const data = await testApi.getImageAndComments(imageId);\n      setImageUrl(data.url);\n      setComments(data.comments);\n      setLoading(false);\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const validate = e => {\n    const { value, name } = e.target;\n    name === 'name' ? setUsername(value) : setUserComment(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.table({ username, userComment });\n    testApi.postComment(userComment, username, imageId);\n  };\n\n  const convertDate = epoch => new Date(epoch).toLocaleDateString('ru-RU');\n\n  const fakeComment =\n    comments && comments.length === 0 ? (\n      <div className=\"comments-wrapper__comment\">\n        <div className=\"comments-wrapper__comment__text\">Ваш комментарий будет первым!</div>\n      </div>\n    ) : null;\n\n  return (\n    <div className=\"container\" ref={forwardedRef}>\n      <button type=\"button\" className=\"close-button\" onClick={onClose}>\n        {closeButtonSvg}\n      </button>\n      {(loading && <Spinner />) || (\n        <>\n          <div className=\"wrapper\">\n            <img className=\"image\" src={imageUrl} alt=\"hi-res\" />\n          </div>\n          <div className=\"comments-wrapper\">\n            {fakeComment ||\n              (comments &&\n                comments.map(({ date, id, text }) => {\n                  const formattedDate = convertDate(date);\n                  return (\n                    <div className=\"comments-wrapper__comment\" key={id}>\n                      <time\n                        className=\"comments-wrapper__comment__date\"\n                        dateTime={formattedDate\n                          .split('.')\n                          .reverse()\n                          .join('-')}\n                      >\n                        {formattedDate}\n                      </time>\n                      <div className=\"comments-wrapper__comment__text\">{text}</div>\n                    </div>\n                  );\n                }))}\n          </div>\n          <form className=\"input-form\" onSubmit={onSubmit}>\n            <input\n              className=\"input-form__name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Ваше имя\"\n              onChange={validate}\n              required\n            />\n            <input\n              className=\"input-form__comment\"\n              type=\"text\"\n              name=\"comment\"\n              placeholder=\"Ваш комментарий\"\n              onChange={validate}\n              required\n            />\n            <input type=\"submit\" className=\"input-form__button\" value=\"Оставить комментарий\" />\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nPicAndComments.propTypes = {\n  imageId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  forwardedRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n\nexport default PicAndComments;\n","import PicAndComments from './PicAndComments';\n\nexport default PicAndComments;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport PicAndComments from '../PicAndComments';\nimport './Modal.css';\n\nconst Modal = ({ onClose, id }) => {\n  const modal = useRef(null);\n\n  const handleKeyUp = useCallback(\n    e => {\n      const keys = {\n        27: () => {\n          e.preventDefault();\n          onClose();\n          window.removeEventListener('keyup', handleKeyUp, false);\n        },\n      };\n\n      if (keys[e.keyCode]) {\n        keys[e.keyCode]();\n      }\n    },\n    [onClose],\n  );\n\n  const handleOutsideClick = useCallback(\n    e => {\n      if (modal !== null && modal !== undefined) {\n        if (!modal.current.contains(e.target)) {\n          onClose();\n          document.removeEventListener('click', handleOutsideClick, false);\n        }\n      }\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp, false);\n    document.addEventListener('click', handleOutsideClick, false);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp, false);\n      document.removeEventListener('click', handleOutsideClick, false);\n    };\n  }, [handleKeyUp, handleOutsideClick]);\n  return (\n    <div className=\"modal\">\n      <PicAndComments imageId={id} onClose={onClose} forwardedRef={modal} />\n    </div>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Modal;\n","import Gallery from './Gallery';\n\nexport default Gallery;","import React, { useEffect, useState } from 'react';\nimport ApiService from '../../apiService/apiService';\nimport Modal from '../Modal';\nimport Spinner from '../Spinner';\nimport './Gallery.css';\n\nconst Gallery = () => {\n  const testApi = new ApiService();\n  const [previews, setPreviews] = useState(null);\n  const [modalOpened, setModalOpened] = useState(false);\n  const [modalId, setModalId] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await testApi.getAllPreviews();\n      setPreviews(data);\n    };\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  const onModalOpen = id => {\n    setModalId(id);\n    setModalOpened(true);\n  };\n\n  return (\n    <>\n      <div className=\"gallery\">\n        {(previews &&\n          previews.map(({ id, url }) => (\n            <img className=\"img\" key={id} src={url} alt=\"preview\" onClick={() => onModalOpen(id)} />\n          ))) || <Spinner />}\n      </div>\n      {modalOpened && <Modal onClose={() => setModalOpened(false)} id={modalId} />}\n    </>\n  );\n};\n\nexport default Gallery;\n","import Footer from './Footer';\n\nexport default Footer;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer-copyright\">© 2018-2019</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Gallery from '../Gallery';\nimport Footer from '../Footer';\nimport 'normalize.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-header__title\">TEST APP</h1>\n      </header>\n      <Gallery />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}